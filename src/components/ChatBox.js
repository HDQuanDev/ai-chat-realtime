import React, { useRef, useEffect } from 'react';
import PropTypes from 'prop-types';
import { marked } from 'marked';

const ChatBox = ({ messageHistory, speakText, copyTextToClipboard, stripHTML, escapeHtml }) => {
  const messagesEndRef = useRef(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(scrollToBottom, [messageHistory]);

  

  // ƒê·∫£m b·∫£o messageHistory lu√¥n l√† m·ªôt m·∫£ng
  if (!Array.isArray(messageHistory)) {
    messageHistory = [];
  }

  return (
    <div id="chat-box">
      {messageHistory.length === 0 ? (
        <div className="message ai-message">
          <div>T√¥i l√† m√¥ h√¨nh ng√¥n ng·ªØ t·ª± nhi√™n ƒë∆∞·ª£c hu·∫•n luy·ªán ƒë·ªÉ tr·∫£ l·ªùi c√°c c√¢u h·ªèi v·ªÅ m·ªçi th·ª©. N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, h√£y h·ªèi t√¥i!</div>
        </div>
      ) : (
        messageHistory.map((message, index) => {
          const textNoHtml = stripHTML(message.text_display);
          const textNoHtmlEscaped = escapeHtml(textNoHtml);
          const textSpeak = encodeURIComponent(textNoHtmlEscaped);
          if(message.sender === 'user') {
            var text_display = message.text_display.replace(/\n/g, "<br>");
          } else {
            var text_display = message.text_display;
          }
          return (
            <div key={index} className={`message ${message.sender === 'user' ? 'user-message' : 'ai-message'}`}>
              <div dangerouslySetInnerHTML={{ __html: marked(text_display) }}></div>
              <hr />
              <button onClick={() => speakText(textSpeak)}>üîä</button>
              <button onClick={() => copyTextToClipboard(textSpeak)}>üìã</button>
            </div>
          );
        })
      )}
      <div ref={messagesEndRef} />
    </div>
  );
};

ChatBox.propTypes = {
  messageHistory: PropTypes.array.isRequired,
  speakText: PropTypes.func.isRequired,
  copyTextToClipboard: PropTypes.func.isRequired,
  stripHTML: PropTypes.func.isRequired,
  escapeHtml: PropTypes.func.isRequired,
  removeMarkdown: PropTypes.func.isRequired,
};

export default ChatBox;